{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\LatestVideoVcr\\\\videovcr\\\\client\\\\src\\\\components\\\\Chat\\\\Emoji.js\";\nimport React, { useState } from 'react';\nimport Picker, { SKIN_TONE_MEDIUM_DARK } from 'emoji-picker-react';\nimport styled from 'styled-components';\n\nconst Emoji = props => {\n  const [chosenEmoji, setChosenEmoji] = useState(null);\n  const [multiEmoji, setMultiEmoji] = useState([]);\n\n  const onEmojiClick = (event, emojiObject) => {\n    setChosenEmoji(emojiObject);\n  };\n\n  const onMultiemoji = () => {\n    setMultiEmoji.push();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Picker, {\n    onEmojiClick: onEmojiClick,\n    skinTone: SKIN_TONE_MEDIUM_DARK,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }), chosenEmoji && /*#__PURE__*/React.createElement(EmojiData, {\n    chosenEmoji: chosenEmoji,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 30\n    }\n  })));\n};\n\nconst EmojiData = _ref => {\n  let {\n    chosenEmoji\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginRight: '810px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }), chosenEmoji.emoji);\n};\n\nexport default Emoji; // render(<Emoji />, document.getElementById('root'));","map":{"version":3,"sources":["C:/xampp/htdocs/LatestVideoVcr/videovcr/client/src/components/Chat/Emoji.js"],"names":["React","useState","Picker","SKIN_TONE_MEDIUM_DARK","styled","Emoji","props","chosenEmoji","setChosenEmoji","multiEmoji","setMultiEmoji","onEmojiClick","event","emojiObject","onMultiemoji","push","EmojiData","textAlign","marginRight","emoji"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,IAAiBC,qBAAjB,QAA8C,oBAA9C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACrB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMU,YAAY,GAAG,CAACC,KAAD,EAAQC,WAAR,KAAwB;AACzCL,IAAAA,cAAc,CAACK,WAAD,CAAd;AACH,GAFD;;AAGA,QAAMC,YAAY,GAAG,MAAM;AACzBJ,IAAAA,aAAa,CAACK,IAAd;AACD,GAFD;;AAGA,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAS,IAAA,YAAY,EAAEJ,YAAvB;AAAqC,IAAA,QAAQ,EAAER,qBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEMI,WAAW,iBAAI,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAEA,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFrB,CADF,CADF;AAQH,CAlBD;;AAmBA,MAAMS,SAAS,GAAG;AAAA,MAAC;AAACT,IAAAA;AAAD,GAAD;AAAA,sBAChB;AAAK,IAAA,KAAK,EAAE;AAACU,MAAAA,SAAS,EAAE,QAAZ;AAAqBC,MAAAA,WAAW,EAAE;AAAlC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGIX,WAAW,CAACY,KAHhB,CADgB;AAAA,CAAlB;;AAOA,eAAed,KAAf,C,CAEA","sourcesContent":["import React, { useState } from 'react';\r\nimport Picker, { SKIN_TONE_MEDIUM_DARK } from 'emoji-picker-react';\r\nimport styled from 'styled-components';\r\n\r\nconst Emoji = (props) => {\r\n    const [chosenEmoji, setChosenEmoji] = useState(null);\r\n    const [multiEmoji, setMultiEmoji] = useState([]);\r\n\r\n    const onEmojiClick = (event, emojiObject) => {\r\n        setChosenEmoji(emojiObject);\r\n    }\r\n    const onMultiemoji = () => {\r\n      setMultiEmoji.push()\r\n    }\r\n    return (\r\n      <>  \r\n        <div>\r\n            <Picker  onEmojiClick={onEmojiClick} skinTone={SKIN_TONE_MEDIUM_DARK}/>\r\n            { chosenEmoji && <EmojiData chosenEmoji={chosenEmoji}/>}\r\n        </div>\r\n        </>\r\n    );\r\n};\r\nconst EmojiData = ({chosenEmoji}) => (\r\n  <div style={{textAlign: 'center',marginRight: '810px'}}>\r\n    <br></br>\r\n    <br></br>\r\n     {chosenEmoji.emoji}\r\n  </div>\r\n);\r\nexport default Emoji;\r\n\r\n// render(<Emoji />, document.getElementById('root'));\r\n"]},"metadata":{},"sourceType":"module"}