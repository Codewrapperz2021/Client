{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\videovcr\\\\client\\\\src\\\\components\\\\Chat\\\\Chat.js\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport socket from '../../socket';\nimport emoji from '../../assets/emoji.png';\nimport file from '../../assets/paperclip-icon.png';\nimport send from '../../assets/send.png';\nimport Emoji from './Emoji';\n\nconst Chat = _ref => {\n  let {\n    display,\n    roomId\n  } = _ref;\n  const currentUser = sessionStorage.getItem('user');\n  const [msg, setMsg] = useState([]);\n  const messagesEndRef = useRef(null);\n  const [displayEmoji, setDisplayEmoji] = useState(false);\n  const inputRef = useRef(); // const clickEmoji = () => {\n  //   if (!displayEmoji) {\n  //     setDisplayEmoji(true);\n  //   } else {\n  //     setDisplayEmoji(false);\n  //   }\n  // }\n\n  useEffect(() => {\n    socket.on('FE-receive-message', _ref2 => {\n      let {\n        msg,\n        sender\n      } = _ref2;\n      setMsg(msgs => [...msgs, {\n        sender,\n        msg\n      }]);\n    });\n  }, []); // Scroll to Bottom of Message List\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [msg]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n\n  const sendMessage = e => {\n    if (e.key === 'Enter' || e.key === 'Shift') {\n      const msg = e.target.value;\n\n      if (msg) {\n        socket.emit('BE-send-message', {\n          roomId,\n          msg,\n          sender: currentUser\n        });\n        inputRef.current.value = '';\n      }\n    }\n  };\n\n  const sendM = e => {\n    const msg = e.target.value;\n\n    if (msg) {\n      socket.emit('BE-send-message', {\n        roomId,\n        msg,\n        sender: currentUser\n      });\n      inputRef.current.value = '';\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  });\n}; // const BottomInput = styled.input`\n//   bottom: 0;\n//   width: 100%;\n//   height: 8%;\n//   padding: 15px;\n//   border-top: 1px solid rgb(69, 69, 82, 0.25);\n//   box-sizing: border-box;\n//   opacity: 0.7;\n//   :focus {\n//     outline: none;\n//   }\n// `;\n\n\nexport default Chat;","map":{"version":3,"sources":["C:/xampp/htdocs/videovcr/client/src/components/Chat/Chat.js"],"names":["React","useEffect","useState","useRef","styled","socket","emoji","file","send","Emoji","Chat","display","roomId","currentUser","sessionStorage","getItem","msg","setMsg","messagesEndRef","displayEmoji","setDisplayEmoji","inputRef","on","sender","msgs","scrollToBottom","current","scrollIntoView","behavior","sendMessage","e","key","target","value","emit","sendM"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,IAAP,MAAiB,iCAAjB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AACA,MAAMC,IAAI,GAAG,QAAyB;AAAA,MAAxB;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAwB;AACpC,QAAMC,WAAW,GAAGC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAApB;AACA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBf,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAMgB,cAAc,GAAGf,MAAM,CAAC,IAAD,CAA7B;AACA,QAAM,CAACgB,YAAD,EAAeC,eAAf,IAAkClB,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAMmB,QAAQ,GAAGlB,MAAM,EAAvB,CALoC,CAOpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,MAAM,CAACiB,EAAP,CAAU,oBAAV,EAAgC,SAAqB;AAAA,UAApB;AAAEN,QAAAA,GAAF;AAAOO,QAAAA;AAAP,OAAoB;AACnDN,MAAAA,MAAM,CAAEO,IAAD,IAAU,CAAC,GAAGA,IAAJ,EAAU;AAAED,QAAAA,MAAF;AAAUP,QAAAA;AAAV,OAAV,CAAX,CAAN;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT,CAfoC,CAqBpC;;AACAf,EAAAA,SAAS,CAAC,MAAM;AAAEwB,IAAAA,cAAc;AAAI,GAA3B,EAA6B,CAACT,GAAD,CAA7B,CAAT;;AAEA,QAAMS,cAAc,GAAG,MAAM;AAC3BP,IAAAA,cAAc,CAACQ,OAAf,CAAuBC,cAAvB,CAAsC;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAtC;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAIC,CAAD,IAAO;AACzB,QAAIA,CAAC,CAACC,GAAF,KAAU,OAAV,IAAqBD,CAAC,CAACC,GAAF,KAAU,OAAnC,EAA4C;AAC1C,YAAMf,GAAG,GAAGc,CAAC,CAACE,MAAF,CAASC,KAArB;;AACA,UAAIjB,GAAJ,EAAS;AACPX,QAAAA,MAAM,CAAC6B,IAAP,CAAY,iBAAZ,EAA+B;AAAEtB,UAAAA,MAAF;AAAUI,UAAAA,GAAV;AAAeO,UAAAA,MAAM,EAAEV;AAAvB,SAA/B;AACAQ,QAAAA,QAAQ,CAACK,OAAT,CAAiBO,KAAjB,GAAyB,EAAzB;AACD;AACF;AACF,GARD;;AASA,QAAME,KAAK,GAAIL,CAAD,IAAO;AACnB,UAAMd,GAAG,GAAGc,CAAC,CAACE,MAAF,CAASC,KAArB;;AACA,QAAIjB,GAAJ,EAAS;AACPX,MAAAA,MAAM,CAAC6B,IAAP,CAAY,iBAAZ,EAA+B;AAAEtB,QAAAA,MAAF;AAAUI,QAAAA,GAAV;AAAeO,QAAAA,MAAM,EAAEV;AAAvB,OAA/B;AACAQ,MAAAA,QAAQ,CAACK,OAAT,CAAiBO,KAAjB,GAAyB,EAAzB;AACD;AACF,GAND;;AAQA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAGD,CAhDD,C,CAkDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAGA,eAAevB,IAAf","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport socket from '../../socket';\r\nimport emoji from '../../assets/emoji.png';\r\nimport file from '../../assets/paperclip-icon.png';\r\nimport send from '../../assets/send.png';\r\nimport Emoji from './Emoji';\r\nconst Chat = ({ display, roomId }) => {\r\n  const currentUser = sessionStorage.getItem('user');\r\n  const [msg, setMsg] = useState([]);\r\n  const messagesEndRef = useRef(null);\r\n  const [displayEmoji, setDisplayEmoji] = useState(false);\r\n  const inputRef = useRef();\r\n\r\n  // const clickEmoji = () => {\r\n  //   if (!displayEmoji) {\r\n  //     setDisplayEmoji(true);\r\n  //   } else {\r\n  //     setDisplayEmoji(false);\r\n  //   }\r\n  // }\r\n\r\n  useEffect(() => {\r\n    socket.on('FE-receive-message', ({ msg, sender }) => {\r\n      setMsg((msgs) => [...msgs, { sender, msg }]);\r\n    });\r\n  }, []);\r\n\r\n  // Scroll to Bottom of Message List\r\n  useEffect(() => { scrollToBottom() }, [msg])\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\r\n  }\r\n\r\n  const sendMessage = (e) => {\r\n    if (e.key === 'Enter' || e.key === 'Shift') {\r\n      const msg = e.target.value;\r\n      if (msg) {\r\n        socket.emit('BE-send-message', { roomId, msg, sender: currentUser });\r\n        inputRef.current.value = '';\r\n      }\r\n    }\r\n  };\r\n  const sendM = (e) => {\r\n    const msg = e.target.value;\r\n    if (msg) {\r\n      socket.emit('BE-send-message', { roomId, msg, sender: currentUser });\r\n      inputRef.current.value = '';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div></div>\r\n  );\r\n}\r\n\r\n// const BottomInput = styled.input`\r\n//   bottom: 0;\r\n//   width: 100%;\r\n//   height: 8%;\r\n//   padding: 15px;\r\n//   border-top: 1px solid rgb(69, 69, 82, 0.25);\r\n//   box-sizing: border-box;\r\n//   opacity: 0.7;\r\n\r\n//   :focus {\r\n//     outline: none;\r\n//   }\r\n// `;\r\n\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}